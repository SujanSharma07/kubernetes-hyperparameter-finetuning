name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.MODEL_IMAGE_NAME }}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.MODEL_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy Random Forest Jobs
        run: |
          set -e  # Exit on error
          kubectl apply -f persistent-volume.yaml || exit 1
          kubectl apply -f persistent-volume-claim.yaml || exit 1
          kubectl apply -f job1.yaml || exit 1
          kubectl apply -f job2.yaml || exit 1
          kubectl apply -f job3.yaml || exit 1

      - name: Wait for Jobs to Complete
        run: |
          for job in random-forest-job-1 random-forest-job-2 random-forest-job-3; do
            kubectl wait --for=condition=complete --timeout=600s job/$job || exit 1
            # Print logs after job completion
            echo "Logs for $job:"
            kubectl logs job/$job || exit 1
          done
  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()  # Only run cleanup if the deploy step was successful
    steps:
      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Cleanup Old Jobs
        run: |
          kubectl delete job random-forest-job-1 || true
          kubectl delete job random-forest-job-2 || true
          kubectl delete job random-forest-job-3 || true